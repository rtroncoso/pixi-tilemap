{"version":3,"file":"pixi-tilemap.js","sourceRoot":"","sources":["../src/CanvasTileRenderer.ts","../src/CompositeRectTileLayer.ts","../src/Constant.ts","../src/GraphicsLayer.ts","../src/RectTileLayer.ts","../src/RectTileShader.ts","../src/TileRenderer.ts","../src/SimpleTileRenderer.ts","../src/ZLayer.ts","../src/exporter.ts","../src/shaderGenerator.ts"],"names":[],"mappings":"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","sourcesContent":["namespace pixi_tilemap {\n\n    export class CanvasTileRenderer {\n\n        renderer: PIXI.CanvasRenderer;\n        tileAnim = [0, 0];\n        dontUseTransform = false;\n\n        constructor(renderer: PIXI.CanvasRenderer) {\n            this.renderer = renderer;\n            this.tileAnim = [0, 0];\n        }\n    }\n\n    PIXI.CanvasRenderer.registerPlugin('tilemap', CanvasTileRenderer);\n\n}\n","/// <reference types=\"pixi.js\" />\n\nnamespace pixi_tilemap {\n\n    export class CompositeRectTileLayer extends PIXI.Container {\n\n        constructor(zIndex?: number, bitmaps?: Array<PIXI.Texture>, texPerChild?: number) {\n            super();\n            this.initialize.apply(this, arguments);\n        }\n\n        updateTransform() {\n            super.displayObjectUpdateTransform()\n        }\n\n        z: number;\n        zIndex: number;\n        modificationMarker = 0;\n        shadowColor = new Float32Array([0.0, 0.0, 0.0, 0.5]);\n        _globalMat: PIXI.Matrix = null;\n\n        texPerChild: number;\n\n        initialize(zIndex?: number, bitmaps?: Array<PIXI.Texture>, texPerChild?: number) {\n            this.z = this.zIndex = zIndex;\n            this.texPerChild = texPerChild || Constant.boundCountPerBuffer * Constant.maxTextures;\n            if (bitmaps) {\n                this.setBitmaps(bitmaps);\n            }\n        }\n\n        setBitmaps(bitmaps: Array<PIXI.Texture>) {\n            var texPerChild = this.texPerChild;\n            var len1 = this.children.length;\n            var len2 = Math.ceil(bitmaps.length / texPerChild);\n            var i: number;\n            for (i = 0; i < len1; i++) {\n                (this.children[i] as RectTileLayer).textures = bitmaps.slice(i * texPerChild, (i + 1) * texPerChild);\n            }\n            for (i = len1; i < len2; i++) {\n                var layer = new RectTileLayer(this.zIndex, bitmaps.slice(i * texPerChild, (i + 1) * texPerChild));\n                layer.compositeParent = true;\n                layer.offsetX = Constant.boundSize;\n                layer.offsetY = Constant.boundSize;\n                this.addChild(layer);\n            }\n        }\n\n        clear() {\n            for (var i = 0; i < this.children.length; i++) {\n                (this.children[i] as RectTileLayer).clear();\n            }\n            this.modificationMarker = 0;\n        }\n\n        addRect(textureIndex: number, u: number, v: number, x: number, y: number, tileWidth: number, tileHeight: number) {\n            const childIndex: number = textureIndex / this.texPerChild >> 0;\n            const textureId: number = textureIndex % this.texPerChild;\n\n            if (this.children[childIndex] && (this.children[childIndex] as RectTileLayer).textures) {\n                (this.children[childIndex] as RectTileLayer).addRect(textureId, u, v, x, y, tileWidth, tileHeight);\n            }\n        }\n\n        addFrame(texture_: PIXI.Texture | String | number, x: number, y: number, animX: number, animY: number) {\n            var texture: PIXI.Texture;\n            var layer: RectTileLayer = null;\n            var ind: number = 0;\n            var children = this.children;\n\n            if (typeof texture_ === \"number\") {\n                var childIndex = texture_ / this.texPerChild >> 0;\n                layer = children[childIndex] as RectTileLayer;\n\n                if (!layer) {\n                    layer = children[0] as RectTileLayer;\n                    if (!layer) {\n                        return false;\n                    }\n                    ind = 0;\n                } else {\n                    ind = texture_ % this.texPerChild;\n                }\n\n                texture = layer.textures[ind];\n            } else {\n                if (typeof texture_ === \"string\") {\n                    texture = PIXI.Texture.fromImage(texture_);\n                } else {\n                    texture = texture_ as PIXI.Texture;\n                }\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i] as RectTileLayer;\n                    var tex = child.textures;\n                    for (var j = 0; j < tex.length; j++) {\n                        if (tex[j].baseTexture === texture.baseTexture) {\n                            layer = child;\n                            ind = j;\n                            break;\n                        }\n                    }\n                    if (layer) {\n                        break;\n                    }\n                }\n\n                if (!layer) {\n                    for (i = 0; i < children.length; i++) {\n                        var child = children[i] as RectTileLayer;\n                        if (child.textures.length < this.texPerChild) {\n                            layer = child;\n                            ind = child.textures.length;\n                            child.textures.push(texture);\n                            break;\n                        }\n                    }\n                    if (!layer) {\n                        layer = new RectTileLayer(this.zIndex, texture);\n                        layer.compositeParent = true;\n                        layer.offsetX = Constant.boundSize;\n                        layer.offsetY = Constant.boundSize;\n                        children.push(layer);\n                        ind = 0;\n                    }\n                }\n            }\n\n            layer.addRect(ind, texture.frame.x, texture.frame.y, x, y, texture.frame.width, texture.frame.height, animX, animY);\n            return true;\n        }\n\n        renderCanvas(renderer: PIXI.CanvasRenderer) {\n            if (!this.visible || this.worldAlpha <= 0 || !this.renderable) {\n                return;\n            }\n            var plugin = renderer.plugins.tilemap;\n            if (!plugin.dontUseTransform) {\n                var wt = this.worldTransform;\n                renderer.context.setTransform(\n                    wt.a,\n                    wt.b,\n                    wt.c,\n                    wt.d,\n                    wt.tx * renderer.resolution,\n                    wt.ty * renderer.resolution\n                );\n            }\n            var layers = this.children;\n            for (var i = 0; i < layers.length; i++) {\n                (layers[i] as RectTileLayer).renderCanvasCore(renderer);\n            }\n        }\n\n        renderWebGL(renderer: PIXI.WebGLRenderer) {\n            if (!this.visible || this.worldAlpha <= 0 || !this.renderable) {\n                return;\n            }\n            var gl = renderer.gl;\n            var plugin = renderer.plugins.tilemap;\n            var shader = plugin.getShader();\n            renderer.setObjectRenderer(plugin);\n            renderer.bindShader(shader);\n            //TODO: dont create new array, please\n            this._globalMat = this._globalMat || new PIXI.Matrix();\n            renderer._activeRenderTarget.projectionMatrix.copy(this._globalMat).append(this.worldTransform);\n            shader.uniforms.projectionMatrix = this._globalMat.toArray(true);\n            shader.uniforms.shadowColor = this.shadowColor;\n            var af = shader.uniforms.animationFrame = plugin.tileAnim;\n            //shader.syncUniform(shader.uniforms.animationFrame);\n            var layers = this.children;\n            for (var i = 0; i < layers.length; i++) {\n                (layers[i] as RectTileLayer).renderWebGLCore(renderer, plugin);\n            }\n        }\n\n        isModified(anim: boolean) {\n            var layers = this.children;\n            if (this.modificationMarker !== layers.length) {\n                return true;\n            }\n            for (var i = 0; i < layers.length; i++) {\n                if ((layers[i] as RectTileLayer).isModified(anim)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        clearModify() {\n            var layers = this.children;\n            this.modificationMarker = layers.length;\n            for (var i = 0; i < layers.length; i++) {\n                (layers[i] as RectTileLayer).clearModify();\n            }\n        }\n    }\n\n}\n","namespace pixi_tilemap {\n\n    export const Constant = {\n        maxTextures: 4,\n        bufferSize: 2048,\n        boundSize: 1024,\n        boundCountPerBuffer: 4,\n    }\n\n}\n","namespace pixi_tilemap {\n\n    class GraphicsLayer extends PIXI.Graphics {\n\n        z: number;\n        zIndex: number;\n\n        constructor(zIndex: number) {\n            super();\n            this.z = this.zIndex = zIndex;\n        }\n\n        renderCanvas(renderer: PIXI.CanvasRenderer) {\n            var wt: PIXI.Matrix = null;\n            if (renderer.plugins.tilemap.dontUseTransform) {\n                wt = this.transform.worldTransform;\n                this.transform.worldTransform = PIXI.Matrix.IDENTITY;\n            }\n            renderer.plugins.graphics.render(this);\n            if (renderer.plugins.tilemap.dontUseTransform) {\n                this.transform.worldTransform = wt;\n            }\n            renderer.context.globalAlpha = 1.0;\n        }\n\n        renderWebGL(renderer: PIXI.WebGLRenderer) {\n            if (!this._webGL[renderer.CONTEXT_UID])\n                this.dirty = true;\n            super.renderWebGL(renderer)\n        }\n\n        isModified(anim: boolean): boolean {\n            return false;\n        }\n\n        clearModify() {\n        }\n    }\n\n}\n","namespace pixi_tilemap {\n\n    import glCore = PIXI.glCore;\n\n    export class RectTileLayer extends PIXI.Container {\n\n        constructor(zIndex: number, texture: PIXI.Texture | Array<PIXI.Texture>) {\n            super();\n            this.initialize(zIndex, texture);\n        }\n\n        updateTransform() {\n            super.displayObjectUpdateTransform()\n        }\n\n        z = 0;\n        zIndex = 0;\n        modificationMarker = 0;\n        shadowColor = new Float32Array([0.0, 0.0, 0.0, 0.5]);\n        _globalMat: PIXI.Matrix = null;\n\n        pointsBuf: Array<number> = [];\n        hasAnim = false;\n        textures: Array<PIXI.Texture>;\n\n        offsetX = 0;\n        offsetY = 0;\n        compositeParent = false;\n\n        initialize(zIndex: number, textures: PIXI.Texture | Array<PIXI.Texture>) {\n            if (!textures) {\n                textures = [];\n            } else if (!(textures instanceof Array) && (textures as PIXI.Texture).baseTexture) {\n                textures = [textures as PIXI.Texture];\n            }\n            this.textures = textures as Array<PIXI.Texture>;\n            this.z = this.zIndex = zIndex;\n            // this.visible = false;\n        }\n\n        clear() {\n            this.pointsBuf.length = 0;\n            this.modificationMarker = 0;\n            this.hasAnim = false;\n        }\n\n        addFrame(texture_: PIXI.Texture | String | number, x: number, y: number, animX: number, animY: number) {\n            var texture: PIXI.Texture;\n            var textureIndex = 0;\n\n            if (typeof texture_ === \"number\") {\n                textureIndex = texture_;\n                texture = this.textures[textureIndex];\n            } else {\n                if (typeof texture_ === \"string\") {\n                    texture = PIXI.Texture.fromImage(texture_);\n                } else {\n                    texture = texture_ as PIXI.Texture;\n                }\n\n                var found = false;\n                var textureList = this.textures;\n                for (var i = 0; i < textureList.length; i++) {\n                    if (textureList[i].baseTexture === texture.baseTexture) {\n                        textureIndex = i;\n                        found = true;\n                        break;\n                    }\n                }\n\n                if (!found) {\n                    // textureIndex = this.textures.length;\n                    // this.textures.push(texture);\n                    return false;\n                }\n            }\n\n            this.addRect(textureIndex, texture.frame.x, texture.frame.y, x, y, texture.frame.width, texture.frame.height, animX, animY);\n            return true;\n        }\n\n        addRect(textureIndex: number, u: number, v: number, x: number, y: number, tileWidth: number, tileHeight: number, animX: number = 0, animY: number = 0) {\n            var pb = this.pointsBuf;\n            this.hasAnim = this.hasAnim || animX > 0 || animY > 0;\n            if (tileWidth === tileHeight) {\n                pb.push(u);\n                pb.push(v);\n                pb.push(x);\n                pb.push(y);\n                pb.push(tileWidth);\n                pb.push(tileHeight);\n                pb.push(animX | 0);\n                pb.push(animY | 0);\n                pb.push(textureIndex);\n            } else {\n                var i: number;\n                if (tileWidth % tileHeight === 0) {\n                    //horizontal line on squares\n                    for (i = 0; i < tileWidth / tileHeight; i++) {\n                        pb.push(u + i * tileHeight);\n                        pb.push(v);\n                        pb.push(x + i * tileHeight);\n                        pb.push(y);\n                        pb.push(tileHeight);\n                        pb.push(tileHeight);\n                        pb.push(animX | 0);\n                        pb.push(animY | 0);\n                        pb.push(textureIndex);\n                    }\n                } else if (tileHeight % tileWidth === 0) {\n                    //vertical line on squares\n                    for (i = 0; i < tileHeight / tileWidth; i++) {\n                        pb.push(u);\n                        pb.push(v + i * tileWidth);\n                        pb.push(x);\n                        pb.push(y + i * tileWidth);\n                        pb.push(tileWidth);\n                        pb.push(tileWidth);\n                        pb.push(animX | 0);\n                        pb.push(animY | 0);\n                        pb.push(textureIndex);\n                    }\n                } else {\n                    //ok, ok, lets use rectangle\n                    pb.push(u);\n                    pb.push(v);\n                    pb.push(x);\n                    pb.push(y);\n                    pb.push(tileWidth);\n                    pb.push(tileHeight);\n                    pb.push(animX | 0);\n                    pb.push(animY | 0);\n                    pb.push(textureIndex);\n                }\n            }\n        }\n\n        renderCanvas(renderer: PIXI.CanvasRenderer) {\n            var plugin = renderer.plugins.tilemap;\n            if (!plugin.dontUseTransform) {\n                var wt = this.worldTransform;\n                renderer.context.setTransform(\n                    wt.a,\n                    wt.b,\n                    wt.c,\n                    wt.d,\n                    wt.tx * renderer.resolution,\n                    wt.ty * renderer.resolution\n                );\n            }\n            this.renderCanvasCore(renderer);\n        }\n\n        renderCanvasCore(renderer: PIXI.CanvasRenderer) {\n            if (this.textures.length === 0) return;\n            var points = this.pointsBuf;\n            renderer.context.fillStyle = '#000000';\n            for (var i = 0, n = points.length; i < n; i += 9) {\n                var x1 = points[i], y1 = points[i + 1];\n                var x2 = points[i + 2], y2 = points[i + 3];\n                var w = points[i + 4];\n                var h = points[i + 5];\n                x1 += points[i + 6] * renderer.plugins.tilemap.tileAnim[0];\n                y1 += points[i + 7] * renderer.plugins.tilemap.tileAnim[1];\n                var textureIndex = points[i + 8];\n                if (textureIndex >= 0) {\n                    renderer.context.drawImage(this.textures[textureIndex].baseTexture.source, x1, y1, w, h, x2, y2, w, h);\n                } else {\n                    renderer.context.globalAlpha = 0.5;\n                    renderer.context.fillRect(x2, y2, w, h);\n                    renderer.context.globalAlpha = 1;\n                }\n            }\n        }\n\n        vbId = 0;\n        vbBuffer: ArrayBuffer = null;\n        vbArray: Float32Array = null;\n        vbInts: Uint32Array = null;\n\n        renderWebGL(renderer: PIXI.WebGLRenderer) {\n            var gl = renderer.gl;\n            var plugin = renderer.plugins.simpleTilemap;\n            var shader = plugin.getShader();\n            renderer.setObjectRenderer(plugin);\n            renderer.bindShader(shader);\n            //TODO: dont create new array, please\n            this._globalMat = this._globalMat || new PIXI.Matrix();\n            renderer._activeRenderTarget.projectionMatrix.copy(this._globalMat).append(this.worldTransform);\n            shader.uniforms.projectionMatrix = this._globalMat.toArray(true);\n            shader.uniforms.shadowColor = this.shadowColor;\n            var af = shader.uniforms.animationFrame = plugin.tileAnim;\n            //shader.syncUniform(shader.uniforms.animationFrame);\n            this.renderWebGLCore(renderer, plugin);\n        }\n\n        renderWebGLCore(renderer: PIXI.WebGLRenderer, plugin: PIXI.ObjectRenderer) {\n            var points = this.pointsBuf;\n            if (points.length === 0) return;\n            var rectsCount = points.length / 9;\n            var tile = plugin || renderer.plugins.simpleTilemap;\n            var gl = renderer.gl;\n\n            tile.checkIndexBuffer(rectsCount);\n\n            var shader = tile.getShader();\n            var textures = this.textures;\n            if (textures.length === 0) return;\n\n            tile.bindTextures(renderer, shader, textures);\n\n            //lost context! recover!\n            var vb = tile.getVb(this.vbId);\n            if (!vb) {\n                vb = tile.createVb();\n                this.vbId = vb.id;\n                this.vbBuffer = null;\n                this.modificationMarker = 0;\n            }\n            var vao = vb.vao;\n            renderer.bindVao(vao);\n            var vertexBuf = vb.vb as glCore.GLBuffer;\n            //if layer was changed, re-upload vertices\n            vertexBuf.bind();\n            var vertices = rectsCount * shader.vertPerQuad;\n            if (vertices === 0) return;\n            if (this.modificationMarker !== vertices) {\n                this.modificationMarker = vertices;\n                var vs = shader.stride * vertices;\n                if (!this.vbBuffer || this.vbBuffer.byteLength < vs) {\n                    //!@#$ happens, need resize\n                    var bk = shader.stride;\n                    while (bk < vs) {\n                        bk *= 2;\n                    }\n                    this.vbBuffer = new ArrayBuffer(bk);\n                    this.vbArray = new Float32Array(this.vbBuffer);\n                    this.vbInts = new Uint32Array(this.vbBuffer);\n                    vertexBuf.upload(this.vbBuffer, 0, true);\n                }\n\n                var arr = this.vbArray, ints = this.vbInts;\n                //upload vertices!\n                var sz = 0;\n                //var tint = 0xffffffff;\n                var textureId: number = 0;\n                var shiftU: number = this.offsetX;\n                var shiftV: number = this.offsetY;\n\n                //var tint = 0xffffffff;\n                var tint = -1;\n                for (var i = 0; i < points.length; i += 9) {\n                    var eps = 0.5;\n                    if (this.compositeParent){\n                        textureId = (points[i + 8] >> 2);\n                        shiftU = this.offsetX * (points[i + 8] & 1);\n                        shiftV = this.offsetY * ((points[i + 8] >> 1) & 1);\n                    }\n                    var x = points[i + 2], y = points[i + 3];\n                    var w = points[i + 4], h = points[i + 5];\n                    var u = points[i] + shiftU, v = points[i + 1] + shiftV;\n                    var animX = points[i + 6], animY = points[i + 7];\n                    arr[sz++] = x;\n                    arr[sz++] = y;\n                    arr[sz++] = u;\n                    arr[sz++] = v;\n                    arr[sz++] = u + eps;\n                    arr[sz++] = v + eps;\n                    arr[sz++] = u + w - eps;\n                    arr[sz++] = v + h - eps;\n                    arr[sz++] = animX;\n                    arr[sz++] = animY;\n                    arr[sz++] = textureId;\n                    arr[sz++] = x + w;\n                    arr[sz++] = y;\n                    arr[sz++] = u + w;\n                    arr[sz++] = v;\n                    arr[sz++] = u + eps;\n                    arr[sz++] = v + eps;\n                    arr[sz++] = u + w - eps;\n                    arr[sz++] = v + h - eps;\n                    arr[sz++] = animX;\n                    arr[sz++] = animY;\n                    arr[sz++] = textureId;\n                    arr[sz++] = x + w;\n                    arr[sz++] = y + h;\n                    arr[sz++] = u + w;\n                    arr[sz++] = v + h;\n                    arr[sz++] = u + eps;\n                    arr[sz++] = v + eps;\n                    arr[sz++] = u + w - eps;\n                    arr[sz++] = v + h - eps;\n                    arr[sz++] = animX;\n                    arr[sz++] = animY;\n                    arr[sz++] = textureId;\n                    arr[sz++] = x;\n                    arr[sz++] = y + h;\n                    arr[sz++] = u;\n                    arr[sz++] = v + h;\n                    arr[sz++] = u + eps;\n                    arr[sz++] = v + eps;\n                    arr[sz++] = u + w - eps;\n                    arr[sz++] = v + h - eps;\n                    arr[sz++] = animX;\n                    arr[sz++] = animY;\n                    arr[sz++] = textureId;\n                }\n\n                // if (vs > this.vbArray.length/2 ) {\n                vertexBuf.upload(arr, 0, true);\n                // } else {\n                //     var view = arr.subarray(0, vs);\n                //     vb.upload(view, 0);\n                // }\n            }\n            gl.drawElements(gl.TRIANGLES, rectsCount * 6, gl.UNSIGNED_SHORT, 0);\n        }\n\n        isModified(anim: boolean) {\n            if (this.modificationMarker !== this.pointsBuf.length ||\n                anim && this.hasAnim) {\n                return true;\n            }\n            return false;\n        }\n\n        clearModify() {\n            this.modificationMarker = this.pointsBuf.length;\n        }\n    }\n\n}\n","namespace pixi_tilemap {\n\n    import GLBuffer = PIXI.glCore.GLBuffer;\n    import VertexArrayObject = PIXI.glCore.VertexArrayObject;\n\n    var rectShaderFrag = `\nvarying vec2 vTextureCoord;\nvarying vec4 vFrame;\nvarying float vTextureId;\nuniform vec4 shadowColor;\nuniform sampler2D uSamplers[%count%];\nuniform vec2 uSamplerSize[%count%];\n\nvoid main(void){\n   vec2 textureCoord = clamp(vTextureCoord, vFrame.xy, vFrame.zw);\n   float textureId = floor(vTextureId + 0.5);\n\n   vec4 color;\n   %forloop%\n   gl_FragColor = color;\n}\n`;\n\n    var rectShaderVert = `\nattribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute vec4 aFrame;\nattribute vec2 aAnim;\nattribute float aTextureId;\n\nuniform mat3 projectionMatrix;\nuniform vec2 animationFrame;\n\nvarying vec2 vTextureCoord;\nvarying float vTextureId;\nvarying vec4 vFrame;\n\nvoid main(void){\n   gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n   vec2 anim = aAnim * animationFrame;\n   vTextureCoord = aTextureCoord + anim;\n   vFrame = aFrame + vec4(anim, anim);\n   vTextureId = aTextureId;\n}\n`;\n\n    export abstract class TilemapShader extends PIXI.Shader {\n\n        maxTextures = 0;\n        indexBuffer: GLBuffer;\n\n        constructor(gl: WebGLRenderingContext, maxTextures: number, shaderVert: string, shaderFrag: string) {\n            super(gl,\n                shaderVert,\n                shaderFrag\n            );\n            this.maxTextures = maxTextures;\n            shaderGenerator.fillSamplers(this, this.maxTextures);\n        }\n\n        abstract createVao(renderer: PIXI.WebGLRenderer, vb: GLBuffer): VertexArrayObject;\n    }\n\n    export class RectTileShader extends TilemapShader {\n        vertSize = 11;\n        vertPerQuad = 4;\n        stride = this.vertSize * 4;\n\n        constructor(gl: WebGLRenderingContext, maxTextures: number) {\n            super(gl,\n                maxTextures,\n                rectShaderVert,\n                shaderGenerator.generateFragmentSrc(maxTextures, rectShaderFrag)\n            );\n            shaderGenerator.fillSamplers(this, this.maxTextures);\n        }\n\n        createVao(renderer: PIXI.WebGLRenderer, vb: GLBuffer) {\n            var gl = renderer.gl;\n            return renderer.createVao()\n                .addIndex(this.indexBuffer)\n                .addAttribute(vb, this.attributes.aVertexPosition, gl.FLOAT, false, this.stride, 0)\n                .addAttribute(vb, this.attributes.aTextureCoord, gl.FLOAT, false, this.stride, 2 * 4)\n                .addAttribute(vb, this.attributes.aFrame, gl.FLOAT, false, this.stride, 4 * 4)\n                .addAttribute(vb, this.attributes.aAnim, gl.FLOAT, false, this.stride, 8 * 4)\n                .addAttribute(vb, this.attributes.aTextureId, gl.FLOAT, false, this.stride, 10 * 4);\n        }\n    }\n\n}\n","namespace pixi_tilemap {\n\n    import glCore = PIXI.glCore;\n\n    function _hackSubImage(tex: glCore.GLTexture, sprite: PIXI.Sprite, clearBuffer?: Uint8Array, clearWidth?: number, clearHeight?: number) {\n        const gl = tex.gl;\n        const baseTex = sprite.texture.baseTexture;\n        if (clearBuffer && clearWidth > 0 && clearHeight > 0)\n        {\n            gl.texSubImage2D(gl.TEXTURE_2D, 0, sprite.position.x, sprite.position.y, clearWidth, clearHeight, tex.format, tex.type, clearBuffer);\n        }\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1);\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, sprite.position.x, sprite.position.y, tex.format, tex.type, baseTex.source as HTMLImageElement);\n    }\n\n    /*\n     * Renderer for rectangle tiles.\n     *\n     * @class\n     * @memberof PIXI.tilemap\n     * @extends PIXI.ObjectRenderer\n     * @param renderer {PIXI.WebGLRenderer} The renderer this sprite batch works for.\n     */\n\n    export class TileRenderer extends PIXI.ObjectRenderer {\n\n        static vbAutoincrement = 0;\n        static SCALE_MODE = PIXI.SCALE_MODES.LINEAR;\n        static DO_CLEAR = false;\n        renderer: PIXI.WebGLRenderer;\n        gl: WebGLRenderingContext;\n        vbs:  { [key: string]: any; } = {};\n        indices = new Uint16Array(0);\n        indexBuffer: glCore.GLBuffer;\n        lastTimeCheck = 0;\n        tileAnim = [0, 0];\n        texLoc: Array<number> = [];\n\n        rectShader: RectTileShader;\n        boundSprites: Array<PIXI.Sprite>;\n        glTextures: Array<PIXI.RenderTexture>;\n\n        _clearBuffer: Uint8Array;\n\n        constructor(renderer: PIXI.WebGLRenderer) {\n            super(renderer)\n        }\n\n        onContextChange() {\n            const gl = this.renderer.gl;\n            const maxTextures = Constant.maxTextures;\n            this.rectShader = new RectTileShader(gl, maxTextures);\n            this.checkIndexBuffer(2000);\n            this.rectShader.indexBuffer = this.indexBuffer;\n            this.vbs = {};\n            this.glTextures = [];\n            this.boundSprites = [];\n            this.initBounds();\n        }\n\n        initBounds() {\n            const gl = this.renderer.gl;\n            const maxTextures = Constant.maxTextures;\n            for (let i = 0; i < maxTextures; i++) {\n                const rt = PIXI.RenderTexture.create(Constant.bufferSize, Constant.bufferSize);\n                rt.baseTexture.premultipliedAlpha = true;\n                rt.baseTexture.scaleMode = TileRenderer.SCALE_MODE;\n                rt.baseTexture.wrapMode = PIXI.WRAP_MODES.CLAMP;\n                this.renderer.textureManager.updateTexture(rt);\n\n                this.glTextures.push(rt);\n                const bounds = this.boundSprites;\n                for (let j = 0; j < Constant.boundCountPerBuffer; j++) {\n                    const spr = new PIXI.Sprite();\n                    spr.position.x = Constant.boundSize * (j & 1);\n                    spr.position.y = Constant.boundSize * (j >> 1);\n                    bounds.push(spr);\n                }\n            }\n        }\n\n        bindTextures(renderer: PIXI.WebGLRenderer, shader: TilemapShader, textures: Array<PIXI.Texture>) {\n            const len = textures.length;\n            const maxTextures = Constant.maxTextures;\n            if (len > Constant.boundCountPerBuffer * maxTextures) {\n                return;\n            }\n            const doClear = TileRenderer.DO_CLEAR;\n            if (doClear && !this._clearBuffer) {\n                this._clearBuffer = new Uint8Array(Constant.boundSize * Constant.boundSize * 4);\n            }\n            const glts = this.glTextures;\n            const bounds = this.boundSprites;\n\n            let i: number;\n            for (i = 0; i < len; i++) {\n                const texture = textures[i];\n                if (!texture || !texture.valid) continue;\n                const bs = bounds[i];\n                if (!bs.texture ||\n                    bs.texture.baseTexture !== texture.baseTexture) {\n                    bs.texture = texture;\n                    const glt = glts[i >> 2];\n                    renderer.bindTexture(glt, 0, true);\n                    if (doClear) {\n                        _hackSubImage((glt.baseTexture as any)._glTextures[renderer.CONTEXT_UID], bs, this._clearBuffer, Constant.boundSize, Constant.boundSize);\n                    } else {\n                        _hackSubImage((glt.baseTexture as any)._glTextures[renderer.CONTEXT_UID], bs);\n                    }\n                }\n            }\n\n            this.texLoc.length = 0;\n            var gltsUsed = (i + 3) >> 2;\n            for (i = 0; i < gltsUsed; i++) {\n                //remove \"i, true\" after resolving a bug\n                this.texLoc.push(renderer.bindTexture(glts[i], i, true))\n            }\n\n            shader.uniforms.uSamplers = this.texLoc;\n        }\n\n        checkLeaks() {\n            const now = Date.now();\n            const old = now - 10000;\n            if (this.lastTimeCheck < old ||\n                this.lastTimeCheck > now) {\n                this.lastTimeCheck = now;\n                const vbs = this.vbs;\n                for (let key in vbs) {\n                    if (vbs[key].lastTimeAccess < old) {\n                        this.removeVb(key);\n                    }\n                }\n            }\n        }\n\n        start() {\n            this.renderer.state.setBlendMode(PIXI.BLEND_MODES.NORMAL);\n            //sorry, nothing\n        }\n\n        getVb(id: string) {\n            this.checkLeaks();\n            const vb = this.vbs[id];\n            if (vb) {\n                vb.lastAccessTime = Date.now();\n                return vb;\n            }\n            return null;\n        }\n\n        createVb() {\n            const id = ++TileRenderer.vbAutoincrement;\n            const shader = this.getShader();\n            const gl = this.renderer.gl;\n            const vb = PIXI.glCore.GLBuffer.createVertexBuffer(gl, null, gl.STREAM_DRAW);\n            const stuff = {\n                id: id,\n                vb: vb,\n                vao: shader.createVao(this.renderer, vb),\n                lastTimeAccess: Date.now(),\n                shader: shader\n            };\n            this.vbs[id] = stuff;\n            return stuff;\n        }\n\n        removeVb(id: string) {\n            if (this.vbs[id]) {\n                this.vbs[id].vb.destroy();\n                this.vbs[id].vao.destroy();\n                delete this.vbs[id];\n            }\n        }\n\n        checkIndexBuffer(size: number) {\n            // the total number of indices in our array, there are 6 points per quad.\n            const totalIndices = size * 6;\n            let indices = this.indices;\n            if (totalIndices <= indices.length) {\n                return;\n            }\n            let len = indices.length || totalIndices;\n            while (len < totalIndices) {\n                len <<= 1;\n            }\n\n            indices = new Uint16Array(len);\n            this.indices = indices;\n\n            // fill the indices with the quads to draw\n            for (let i = 0, j = 0; i + 5 < indices.length; i += 6, j += 4) {\n                indices[i + 0] = j + 0;\n                indices[i + 1] = j + 1;\n                indices[i + 2] = j + 2;\n                indices[i + 3] = j + 0;\n                indices[i + 4] = j + 2;\n                indices[i + 5] = j + 3;\n            }\n\n            if (this.indexBuffer) {\n                this.indexBuffer.upload(indices);\n            } else {\n                let gl = this.renderer.gl;\n                this.indexBuffer = glCore.GLBuffer.createIndexBuffer(gl, this.indices, gl.STATIC_DRAW);\n            }\n        }\n\n        getShader(): TilemapShader {\n            return this.rectShader;\n        }\n\n        destroy() {\n            super.destroy();\n            this.rectShader.destroy();\n            this.rectShader = null;\n        }\n    }\n\n    PIXI.WebGLRenderer.registerPlugin('tilemap', TileRenderer);\n\n}\n","/// <reference path=\"TileRenderer.ts\" />\n\nnamespace pixi_tilemap {\n\n    import glCore = PIXI.glCore;\n\n    /*\n     * Renderer for rectangle tiles.\n     *\n     * @class\n     * @memberof PIXI.tilemap\n     * @extends PIXI.ObjectRenderer\n     * @param renderer {PIXI.WebGLRenderer} The renderer this sprite batch works for.\n     */\n\n    export class SimpleTileRenderer extends TileRenderer {\n\n        constructor(renderer: PIXI.WebGLRenderer) {\n            super(renderer)\n        }\n\n        samplerSize: Array<number> = [];\n\n        onContextChange() {\n            const gl = this.renderer.gl;\n            this.rectShader = new RectTileShader(gl, 1);\n            this.checkIndexBuffer(2000);\n            this.rectShader.indexBuffer = this.indexBuffer;\n            this.vbs = {};\n        }\n\n        bindTextures(renderer: PIXI.WebGLRenderer, shader: TilemapShader, textures: Array<PIXI.Texture>) {\n            const len = textures.length;\n\n            let i: number;\n            for (i = 0; i < len; i++) {\n                const texture = textures[i];\n\n                if (!texture || !texture.valid) {\n                    continue;\n                }\n\n                this.texLoc[0] = renderer.bindTexture(texture, 0, true);\n                shader.uniforms.uSamplers = this.texLoc;\n\n                this.samplerSize[0] = 1.0 / texture.baseTexture.width;\n                this.samplerSize[1] = 1.0 / texture.baseTexture.height;\n                shader.uniforms.uSamplerSize = this.samplerSize;\n\n                break;\n            }\n        }\n\n        destroy() {\n            super.destroy();\n        }\n    }\n\n    PIXI.WebGLRenderer.registerPlugin('simpleTilemap', SimpleTileRenderer);\n\n}\n","namespace pixi_tilemap {\n\n    export class ZLayer extends PIXI.Container {\n\n        constructor(tilemap: PIXI.Container, zIndex: number) {\n            super();\n            this.tilemap = tilemap;\n            this.z = zIndex;\n        }\n\n        tilemap: any;\n        z: number;\n        zIndex: number;\n        _previousLayers: number;\n        canvasBuffer: HTMLCanvasElement;\n        _tempRender: PIXI.CanvasRenderer;\n        _lastAnimationFrame: number = -1;\n        layerTransform: PIXI.Matrix;\n\n        clear() {\n            var layers = this.children as Array<CompositeRectTileLayer>;\n            for (var i = 0; i < layers.length; i++)\n                layers[i].clear();\n            this._previousLayers = 0;\n        }\n\n        cacheIfDirty() {\n            var tilemap: any = this.tilemap;\n            var layers = this.children as Array<CompositeRectTileLayer>;\n            var modified = this._previousLayers !== layers.length;\n            this._previousLayers = layers.length;\n            var buf = this.canvasBuffer;\n            var tempRender = this._tempRender;\n            if (!buf) {\n                buf = this.canvasBuffer = document.createElement('canvas');\n                tempRender = this._tempRender = new PIXI.CanvasRenderer(100, 100, {view: buf});\n                tempRender.context = tempRender.rootContext;\n                tempRender.plugins.tilemap.dontUseTransform = true;\n            }\n            if (buf.width !== tilemap._layerWidth ||\n                buf.height !== tilemap._layerHeight) {\n                buf.width = tilemap._layerWidth;\n                buf.height = tilemap._layerHeight;\n                modified = true;\n            }\n            var i: number;\n            if (!modified) {\n                for (i = 0; i < layers.length; i++) {\n                    if (layers[i].isModified(this._lastAnimationFrame !== tilemap.animationFrame)) {\n                        modified = true;\n                        break;\n                    }\n                }\n            }\n            this._lastAnimationFrame = tilemap.animationFrame;\n            if (modified) {\n                if (tilemap._hackRenderer) {\n                    tilemap._hackRenderer(tempRender);\n                }\n                tempRender.context.clearRect(0, 0, buf.width, buf.height);\n                for (i = 0; i < layers.length; i++) {\n                    layers[i].clearModify();\n                    layers[i].renderCanvas(tempRender);\n                }\n            }\n            this.layerTransform = this.worldTransform;\n            for (i = 0; i < layers.length; i++) {\n                this.layerTransform = layers[i].worldTransform;\n                break;\n            }\n        }\n\n        renderCanvas(renderer: PIXI.CanvasRenderer) {\n            this.cacheIfDirty();\n            var wt = this.layerTransform;\n            renderer.context.setTransform(\n                wt.a,\n                wt.b,\n                wt.c,\n                wt.d,\n                wt.tx * renderer.resolution,\n                wt.ty * renderer.resolution\n            );\n            var tilemap = this.tilemap;\n            renderer.context.drawImage(this.canvasBuffer, 0, 0);\n        }\n    }\n}\n","namespace pixi_tilemap {\n\n    (PIXI as any).tilemap = pixi_tilemap;\n\n}\n","namespace pixi_tilemap.shaderGenerator {\n\n    export function fillSamplers(shader: TilemapShader, maxTextures: number) {\n        var sampleValues: Array<number> = [];\n        for (var i = 0; i < maxTextures; i++)\n        {\n            sampleValues[i] = i;\n        }\n        shader.bind();\n        shader.uniforms.uSamplers = sampleValues;\n\n        var samplerSize: Array<number> = [];\n        for (i = 0; i < maxTextures; i++) {\n            samplerSize.push(1.0 / Constant.bufferSize);\n            samplerSize.push(1.0 / Constant.bufferSize);\n        }\n        shader.uniforms.uSamplerSize = samplerSize;\n    }\n\n    export function generateFragmentSrc(maxTextures: number, fragmentSrc: string) {\n        return fragmentSrc.replace(/%count%/gi, maxTextures + \"\")\n            .replace(/%forloop%/gi, this.generateSampleSrc(maxTextures));\n    }\n\n    export function generateSampleSrc(maxTextures: number) {\n        var src = '';\n\n        src += '\\n';\n        src += '\\n';\n\n        src += 'if(vTextureId <= -1.0) {';\n        src += '\\n\\tcolor = shadowColor;';\n        src += '\\n}';\n\n        for (var i = 0; i < maxTextures; i++)\n        {\n            src += '\\nelse ';\n\n            if(i < maxTextures-1)\n            {\n                src += 'if(textureId == ' + i + '.0)';\n            }\n\n            src += '\\n{';\n            src += '\\n\\tcolor = texture2D(uSamplers['+i+'], textureCoord * uSamplerSize['+i+']);';\n            src += '\\n}';\n        }\n\n        src += '\\n';\n        src += '\\n';\n\n        return src;\n    }\n\n}\n"]}